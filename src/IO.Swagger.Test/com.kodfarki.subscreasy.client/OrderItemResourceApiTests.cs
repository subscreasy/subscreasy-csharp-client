/* 
 * Api Documentation
 *
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.com.kodfarki.subscreasy.client;
using IO.Swagger.com.kodfarki.subscreasy.client.model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing OrderItemResourceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class OrderItemResourceApiTests
    {
        private OrderItemResourceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new OrderItemResourceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OrderItemResourceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OrderItemResourceApi
            //Assert.IsInstanceOfType(typeof(OrderItemResourceApi), instance, "instance is a OrderItemResourceApi");
        }

        
        /// <summary>
        /// Test CreateOrderItemUsingPOST
        /// </summary>
        [Test]
        public void CreateOrderItemUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OrderItem orderItem = null;
            //var response = instance.CreateOrderItemUsingPOST(orderItem);
            //Assert.IsInstanceOf<OrderItem> (response, "response is OrderItem");
        }
        
        /// <summary>
        /// Test DeleteOrderItemUsingDELETE
        /// </summary>
        [Test]
        public void DeleteOrderItemUsingDELETETest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //instance.DeleteOrderItemUsingDELETE(id);
            
        }
        
        /// <summary>
        /// Test GetAllOrderItemsUsingGET
        /// </summary>
        [Test]
        public void GetAllOrderItemsUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllOrderItemsUsingGET();
            //Assert.IsInstanceOf<List<OrderItem>> (response, "response is List<OrderItem>");
        }
        
        /// <summary>
        /// Test GetOrderItemUsingGET
        /// </summary>
        [Test]
        public void GetOrderItemUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //var response = instance.GetOrderItemUsingGET(id);
            //Assert.IsInstanceOf<OrderItem> (response, "response is OrderItem");
        }
        
        /// <summary>
        /// Test UpdateOrderItemUsingPUT
        /// </summary>
        [Test]
        public void UpdateOrderItemUsingPUTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OrderItem orderItem = null;
            //var response = instance.UpdateOrderItemUsingPUT(orderItem);
            //Assert.IsInstanceOf<OrderItem> (response, "response is OrderItem");
        }
        
    }

}
