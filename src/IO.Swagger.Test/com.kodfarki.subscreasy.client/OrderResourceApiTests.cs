/* 
 * Api Documentation
 *
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.com.kodfarki.subscreasy.client;
using IO.Swagger.com.kodfarki.subscreasy.client.model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing OrderResourceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class OrderResourceApiTests
    {
        private OrderResourceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new OrderResourceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OrderResourceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OrderResourceApi
            //Assert.IsInstanceOfType(typeof(OrderResourceApi), instance, "instance is a OrderResourceApi");
        }

        
        /// <summary>
        /// Test CreateOrderUsingPOST
        /// </summary>
        [Test]
        public void CreateOrderUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Order order = null;
            //var response = instance.CreateOrderUsingPOST(order);
            //Assert.IsInstanceOf<Order> (response, "response is Order");
        }
        
        /// <summary>
        /// Test DeleteOrderUsingDELETE
        /// </summary>
        [Test]
        public void DeleteOrderUsingDELETETest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //instance.DeleteOrderUsingDELETE(id);
            
        }
        
        /// <summary>
        /// Test GetAllOrdersUsingGET
        /// </summary>
        [Test]
        public void GetAllOrdersUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllOrdersUsingGET();
            //Assert.IsInstanceOf<List<Order>> (response, "response is List<Order>");
        }
        
        /// <summary>
        /// Test GetOrderUsingGET
        /// </summary>
        [Test]
        public void GetOrderUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //var response = instance.GetOrderUsingGET(id);
            //Assert.IsInstanceOf<Order> (response, "response is Order");
        }
        
        /// <summary>
        /// Test UpdateOrderUsingPUT
        /// </summary>
        [Test]
        public void UpdateOrderUsingPUTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Order order = null;
            //var response = instance.UpdateOrderUsingPUT(order);
            //Assert.IsInstanceOf<Order> (response, "response is Order");
        }
        
    }

}
