/* 
 * Api Documentation
 *
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.com.kodfarki.subscreasy.client;
using IO.Swagger.com.kodfarki.subscreasy.client.model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing WebHookServerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class WebHookServerApiTests
    {
        private WebHookServerApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WebHookServerApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WebHookServerApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' WebHookServerApi
            //Assert.IsInstanceOfType(typeof(WebHookServerApi), instance, "instance is a WebHookServerApi");
        }

        
        /// <summary>
        /// Test SubscriberCreatedUsingPOST
        /// </summary>
        [Test]
        public void SubscriberCreatedUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WebHookRequest r = null;
            //var response = instance.SubscriberCreatedUsingPOST(r);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test SubscriberUpdatedUsingPOST
        /// </summary>
        [Test]
        public void SubscriberUpdatedUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WebHookRequest r = null;
            //var response = instance.SubscriberUpdatedUsingPOST(r);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test SubscriptionEndedUsingPOST
        /// </summary>
        [Test]
        public void SubscriptionEndedUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WebHookRequest r = null;
            //var response = instance.SubscriptionEndedUsingPOST(r);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test SubscriptionRenewalFailedUsingPOST
        /// </summary>
        [Test]
        public void SubscriptionRenewalFailedUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WebHookRequest r = null;
            //var response = instance.SubscriptionRenewalFailedUsingPOST(r);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test SubscriptionRenewedUsingPOST
        /// </summary>
        [Test]
        public void SubscriptionRenewedUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WebHookRequest r = null;
            //var response = instance.SubscriptionRenewedUsingPOST(r);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test SubscriptionStartedUsingPOST
        /// </summary>
        [Test]
        public void SubscriptionStartedUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WebHookRequest r = null;
            //var response = instance.SubscriptionStartedUsingPOST(r);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
    }

}
