/* 
 * Api Documentation
 *
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.com.kodfarki.subscreasy.client.model
{
    /// <summary>
    /// CompanyProps
    /// </summary>
    [DataContract]
    public partial class CompanyProps :  IEquatable<CompanyProps>, IValidatableObject
    {
        /// <summary>
        /// Defines PaymentGateway
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum PaymentGatewayEnum
        {
            
            /// <summary>
            /// Enum OFFLINE for value: OFFLINE
            /// </summary>
            [EnumMember(Value = "OFFLINE")]
            OFFLINE = 1,
            
            /// <summary>
            /// Enum IYZICO for value: IYZICO
            /// </summary>
            [EnumMember(Value = "IYZICO")]
            IYZICO = 2,
            
            /// <summary>
            /// Enum PAYU for value: PAYU
            /// </summary>
            [EnumMember(Value = "PAYU")]
            PAYU = 3,
            
            /// <summary>
            /// Enum PAYTR for value: PAYTR
            /// </summary>
            [EnumMember(Value = "PAYTR")]
            PAYTR = 4
        }

        /// <summary>
        /// Gets or Sets PaymentGateway
        /// </summary>
        [DataMember(Name="paymentGateway", EmitDefaultValue=false)]
        public PaymentGatewayEnum? PaymentGateway { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CompanyProps" /> class.
        /// </summary>
        /// <param name="ApiKey">ApiKey.</param>
        /// <param name="CallbackUrl">CallbackUrl.</param>
        /// <param name="Company">Company.</param>
        /// <param name="Id">Id.</param>
        /// <param name="PaymentGateway">PaymentGateway.</param>
        /// <param name="PaymentGatewayApiKey">PaymentGatewayApiKey.</param>
        /// <param name="PaymentGatewaySecurityKey">PaymentGatewaySecurityKey.</param>
        /// <param name="PaytrMerchantId">PaytrMerchantId.</param>
        /// <param name="PayuMerchantKeyRenewals">PayuMerchantKeyRenewals.</param>
        /// <param name="PayuSecretKeyRenewals">PayuSecretKeyRenewals.</param>
        /// <param name="PrivacyPolicyUrl">PrivacyPolicyUrl.</param>
        /// <param name="SecureKey">SecureKey.</param>
        public CompanyProps(string ApiKey = default(string), string CallbackUrl = default(string), Company Company = default(Company), long? Id = default(long?), PaymentGatewayEnum? PaymentGateway = default(PaymentGatewayEnum?), string PaymentGatewayApiKey = default(string), string PaymentGatewaySecurityKey = default(string), int? PaytrMerchantId = default(int?), string PayuMerchantKeyRenewals = default(string), string PayuSecretKeyRenewals = default(string), string PrivacyPolicyUrl = default(string), string SecureKey = default(string))
        {
            this.ApiKey = ApiKey;
            this.CallbackUrl = CallbackUrl;
            this.Company = Company;
            this.Id = Id;
            this.PaymentGateway = PaymentGateway;
            this.PaymentGatewayApiKey = PaymentGatewayApiKey;
            this.PaymentGatewaySecurityKey = PaymentGatewaySecurityKey;
            this.PaytrMerchantId = PaytrMerchantId;
            this.PayuMerchantKeyRenewals = PayuMerchantKeyRenewals;
            this.PayuSecretKeyRenewals = PayuSecretKeyRenewals;
            this.PrivacyPolicyUrl = PrivacyPolicyUrl;
            this.SecureKey = SecureKey;
        }
        
        /// <summary>
        /// Gets or Sets ApiKey
        /// </summary>
        [DataMember(Name="apiKey", EmitDefaultValue=false)]
        public string ApiKey { get; set; }

        /// <summary>
        /// Gets or Sets CallbackUrl
        /// </summary>
        [DataMember(Name="callbackUrl", EmitDefaultValue=false)]
        public string CallbackUrl { get; set; }

        /// <summary>
        /// Gets or Sets Company
        /// </summary>
        [DataMember(Name="company", EmitDefaultValue=false)]
        public Company Company { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long? Id { get; set; }


        /// <summary>
        /// Gets or Sets PaymentGatewayApiKey
        /// </summary>
        [DataMember(Name="paymentGatewayApiKey", EmitDefaultValue=false)]
        public string PaymentGatewayApiKey { get; set; }

        /// <summary>
        /// Gets or Sets PaymentGatewaySecurityKey
        /// </summary>
        [DataMember(Name="paymentGatewaySecurityKey", EmitDefaultValue=false)]
        public string PaymentGatewaySecurityKey { get; set; }

        /// <summary>
        /// Gets or Sets PaytrMerchantId
        /// </summary>
        [DataMember(Name="paytrMerchantId", EmitDefaultValue=false)]
        public int? PaytrMerchantId { get; set; }

        /// <summary>
        /// Gets or Sets PayuMerchantKeyRenewals
        /// </summary>
        [DataMember(Name="payuMerchantKeyRenewals", EmitDefaultValue=false)]
        public string PayuMerchantKeyRenewals { get; set; }

        /// <summary>
        /// Gets or Sets PayuSecretKeyRenewals
        /// </summary>
        [DataMember(Name="payuSecretKeyRenewals", EmitDefaultValue=false)]
        public string PayuSecretKeyRenewals { get; set; }

        /// <summary>
        /// Gets or Sets PrivacyPolicyUrl
        /// </summary>
        [DataMember(Name="privacyPolicyUrl", EmitDefaultValue=false)]
        public string PrivacyPolicyUrl { get; set; }

        /// <summary>
        /// Gets or Sets SecureKey
        /// </summary>
        [DataMember(Name="secureKey", EmitDefaultValue=false)]
        public string SecureKey { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompanyProps {\n");
            sb.Append("  ApiKey: ").Append(ApiKey).Append("\n");
            sb.Append("  CallbackUrl: ").Append(CallbackUrl).Append("\n");
            sb.Append("  Company: ").Append(Company).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  PaymentGateway: ").Append(PaymentGateway).Append("\n");
            sb.Append("  PaymentGatewayApiKey: ").Append(PaymentGatewayApiKey).Append("\n");
            sb.Append("  PaymentGatewaySecurityKey: ").Append(PaymentGatewaySecurityKey).Append("\n");
            sb.Append("  PaytrMerchantId: ").Append(PaytrMerchantId).Append("\n");
            sb.Append("  PayuMerchantKeyRenewals: ").Append(PayuMerchantKeyRenewals).Append("\n");
            sb.Append("  PayuSecretKeyRenewals: ").Append(PayuSecretKeyRenewals).Append("\n");
            sb.Append("  PrivacyPolicyUrl: ").Append(PrivacyPolicyUrl).Append("\n");
            sb.Append("  SecureKey: ").Append(SecureKey).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CompanyProps);
        }

        /// <summary>
        /// Returns true if CompanyProps instances are equal
        /// </summary>
        /// <param name="input">Instance of CompanyProps to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompanyProps input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ApiKey == input.ApiKey ||
                    (this.ApiKey != null &&
                    this.ApiKey.Equals(input.ApiKey))
                ) && 
                (
                    this.CallbackUrl == input.CallbackUrl ||
                    (this.CallbackUrl != null &&
                    this.CallbackUrl.Equals(input.CallbackUrl))
                ) && 
                (
                    this.Company == input.Company ||
                    (this.Company != null &&
                    this.Company.Equals(input.Company))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.PaymentGateway == input.PaymentGateway ||
                    (this.PaymentGateway != null &&
                    this.PaymentGateway.Equals(input.PaymentGateway))
                ) && 
                (
                    this.PaymentGatewayApiKey == input.PaymentGatewayApiKey ||
                    (this.PaymentGatewayApiKey != null &&
                    this.PaymentGatewayApiKey.Equals(input.PaymentGatewayApiKey))
                ) && 
                (
                    this.PaymentGatewaySecurityKey == input.PaymentGatewaySecurityKey ||
                    (this.PaymentGatewaySecurityKey != null &&
                    this.PaymentGatewaySecurityKey.Equals(input.PaymentGatewaySecurityKey))
                ) && 
                (
                    this.PaytrMerchantId == input.PaytrMerchantId ||
                    (this.PaytrMerchantId != null &&
                    this.PaytrMerchantId.Equals(input.PaytrMerchantId))
                ) && 
                (
                    this.PayuMerchantKeyRenewals == input.PayuMerchantKeyRenewals ||
                    (this.PayuMerchantKeyRenewals != null &&
                    this.PayuMerchantKeyRenewals.Equals(input.PayuMerchantKeyRenewals))
                ) && 
                (
                    this.PayuSecretKeyRenewals == input.PayuSecretKeyRenewals ||
                    (this.PayuSecretKeyRenewals != null &&
                    this.PayuSecretKeyRenewals.Equals(input.PayuSecretKeyRenewals))
                ) && 
                (
                    this.PrivacyPolicyUrl == input.PrivacyPolicyUrl ||
                    (this.PrivacyPolicyUrl != null &&
                    this.PrivacyPolicyUrl.Equals(input.PrivacyPolicyUrl))
                ) && 
                (
                    this.SecureKey == input.SecureKey ||
                    (this.SecureKey != null &&
                    this.SecureKey.Equals(input.SecureKey))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ApiKey != null)
                    hashCode = hashCode * 59 + this.ApiKey.GetHashCode();
                if (this.CallbackUrl != null)
                    hashCode = hashCode * 59 + this.CallbackUrl.GetHashCode();
                if (this.Company != null)
                    hashCode = hashCode * 59 + this.Company.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.PaymentGateway != null)
                    hashCode = hashCode * 59 + this.PaymentGateway.GetHashCode();
                if (this.PaymentGatewayApiKey != null)
                    hashCode = hashCode * 59 + this.PaymentGatewayApiKey.GetHashCode();
                if (this.PaymentGatewaySecurityKey != null)
                    hashCode = hashCode * 59 + this.PaymentGatewaySecurityKey.GetHashCode();
                if (this.PaytrMerchantId != null)
                    hashCode = hashCode * 59 + this.PaytrMerchantId.GetHashCode();
                if (this.PayuMerchantKeyRenewals != null)
                    hashCode = hashCode * 59 + this.PayuMerchantKeyRenewals.GetHashCode();
                if (this.PayuSecretKeyRenewals != null)
                    hashCode = hashCode * 59 + this.PayuSecretKeyRenewals.GetHashCode();
                if (this.PrivacyPolicyUrl != null)
                    hashCode = hashCode * 59 + this.PrivacyPolicyUrl.GetHashCode();
                if (this.SecureKey != null)
                    hashCode = hashCode * 59 + this.SecureKey.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
